import { useState } from 'react'

interface ServiceProps {
  title: string
  description: string
  icon: string
  isActive: boolean
  onClick: () => void
  index: number
}

const ServiceCard = ({ title, description, icon, isActive, onClick, index }: ServiceProps) => {
  const handleKeyDown = (e: React.KeyboardEvent) => {
    if (e.key === 'Enter' || e.key === ' ') {
      onClick()
    }
  }

  return (
    <div 
      className={`group relative card p-6 hover:shadow-card ${
        isActive 
          ? 'border-l-4 border-teal-500 shadow-card' 
          : 'border-l-4 border-transparent'
      }`}
      onClick={onClick}
      onKeyDown={handleKeyDown}
      tabIndex={0}
      role="button"
      aria-pressed={isActive}
      aria-label={`–£—Å–ª—É–≥–∞: ${title}`}
    >
      <div className="flex">
        <div className="mr-4 text-4xl text-teal-500">{icon}</div>
        <div>
          <h3 className="text-xl font-semibold mb-3 font-montserrat group-hover:text-teal-600 transition-colors">{title}</h3>
          <p className="text-gray-600 font-inter">{description}</p>
        </div>
      </div>
      <div className={`absolute bottom-0 left-0 right-0 h-1 bg-gradient-to-r from-teal-500 to-teal-300 transform origin-left transition-transform duration-300 ${isActive ? 'scale-x-100' : 'scale-x-0'} group-hover:scale-x-100`}></div>
    </div>
  )
}

const Services = () => {
  const [activeService, setActiveService] = useState(0)
  
  const services = [
    {
      title: '–û—Ç–∫–∞—á–∫–∞ —Å–µ–ø—Ç–∏–∫–æ–≤',
      description: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –æ—Ç–∫–∞—á–∫–∞ —Å–µ–ø—Ç–∏–∫–æ–≤ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –±–∏–æ—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—â–∞—è –ø–æ–ª–Ω—É—é –æ—á–∏—Å—Ç–∫—É –æ—Ç –∏–ª–∞ –∏ –≥—Ä—è–∑–∏.',
      icon: 'üöö'
    },
    {
      title: '–ó–∞–ø—É—Å–∫ –ø—Ä–µ–ø–∞—Ä–∞—Ç–æ–≤',
      description: '–î–≤—É—Ö—ç—Ç–∞–ø–Ω—ã–π –∑–∞–ø—É—Å–∫ –±–∏–æ–ø—Ä–µ–ø–∞—Ä–∞—Ç–æ–≤ (–¢-103 –∏ –¢-107) –¥–ª—è —Ä–∞–∑–∂–∏–∂–µ–Ω–∏—è –æ—Ç—Ö–æ–¥–æ–≤ –∏ –∑–∞–ø—É—Å–∫–∞ –ø–æ–ª–µ–∑–Ω—ã—Ö –±–∞–∫—Ç–µ—Ä–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–¥–æ–ª–∂–∞—é—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º.',
      icon: 'üß™'
    },
    {
      title: '–ü–æ–¥–∫–æ–ø –∏ –æ—á–∏—Å—Ç–∫–∞ –ø–æ—á–≤—ã',
      description: '–ü–æ–¥–∫–æ–ø –Ω–∞ —à—Ç—ã–∫ –ª–æ–ø–∞—Ç—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ—á–≤—ã, –ø—Ä–æ–ø–∏—Ç–∞–Ω–Ω–æ–π –ø–æ—Ä–æ—à–∫–∞–º–∏, —á—Ç–æ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –±–æ–ª–µ–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—É—é –æ—á–∏—Å—Ç–∫—É.',
      icon: 'üå±'
    },
    {
      title: '–í—ã–≤–æ–∑ –∏ —É—Ç–∏–ª–∏–∑–∞—Ü–∏—è',
      description: '–ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –≤—ã–≤–æ–∑ –∏ —É—Ç–∏–ª–∏–∑–∞—Ü–∏—è –º—É—Å–æ—Ä–∞ –∏ –æ—Ç—Ö–æ–¥–æ–≤ —Å —Å–æ–±–ª—é–¥–µ–Ω–∏–µ–º —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –Ω–æ—Ä–º –∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π.',
      icon: '‚ôªÔ∏è'
    }
  ]

  return (
    <section id="services" className="py-16 md:py-24 bg-gray-50">
      <div className="container">
        <h2 className="section-title">–ù–∞—à–∏ —É—Å–ª—É–≥–∏</h2>
        <p className="section-subtitle">–ü–æ–ª–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Å —Ä–∞–±–æ—Ç –ø–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—é —Å–µ–ø—Ç–∏–∫–æ–≤ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –±–∏–æ—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π</p>
        
        <div className="grid grid-cols-1 md:grid-cols-2 gap-8 mt-12">
          {services.map((service, index) => (
            <ServiceCard
              key={index}
              title={service.title}
              description={service.description}
              icon={service.icon}
              isActive={activeService === index}
              onClick={() => setActiveService(index)}
              index={index}
            />
          ))}
        </div>
      </div>
    </section>
  )
}

export default Services 